// Place your key bindings in this file to override the defaults
[
    {
        "key": "ctrl+shift+d",
        "command": "editor.action.duplicateSelection"
    },
    {
        "key": "ctrl+shift+up",
        "command": "editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+up",
        "command": "-editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+down",
        "command": "editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+down",
        "command": "-editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+up",
        "command": "editor.action.insertCursorAbove",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+up",
        "command": "-editor.action.insertCursorAbove",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+down",
        "command": "editor.action.insertCursorBelow",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+down",
        "command": "-editor.action.insertCursorBelow",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+7",
        "command": "editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+oem_2",
        "command": "-editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+7",
        "command": "editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+a",
        "command": "-editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+m",
        "command": "editor.action.jumpToBracket",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+oem_5",
        "command": "-editor.action.jumpToBracket",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+right",
        "command": "-editor.action.smartSelect.expand",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+r",
        "command": "workbench.action.showAllSymbols",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+t",
        "command": "editor.action.transpose"
    },
    {
        "key": "ctrl+t",
        "command": "-workbench.action.showAllSymbols"
    },
    {
        "key": "ctrl+k ctrl+u",
        "command": "editor.action.transformToUppercase"
    },
    {
        "key": "ctrl+k ctrl+l",
        "command": "editor.action.transformToLowercase"
    },
    {
        "key": "alt+left",
        "command": "cursorWordPartLeft",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+right",
        "command": "cursorWordPartRight",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+shift+left",
        "command": "cursorWordPartLeftSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+shift+right",
        "command": "cursorWordPartRightSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+alt+right",
        "command": "workbench.action.moveEditorToNextGroup"
    },
    {
        "key": "ctrl+alt+right",
        "command": "-workbench.action.moveEditorToNextGroup"
    },
    {
        "key": "ctrl+shift+alt+left",
        "command": "workbench.action.moveEditorToPreviousGroup"
    },
    {
        "key": "ctrl+alt+left",
        "command": "-workbench.action.moveEditorToPreviousGroup"
    },
    {
        "key": "ctrl+alt+right",
        "command": "workbench.action.focusNextGroup"
    },
    {
        "key": "ctrl+alt+left",
        "command": "workbench.action.focusPreviousGroup"
    },
    {
        "key": "ctrl+alt+w",
        "command": "workbench.action.closeFolder"
    },
    {
        "key": "ctrl+k f",
        "command": "-workbench.action.closeFolder"
    },
    {
        "key": "ctrl+alt+o",
        "command": "workbench.action.files.openFolder"
    },
    {
        "key": "ctrl+k ctrl+o",
        "command": "-workbench.action.files.openFolder"
    },
    {
        "key": "ctrl+alt+s",
        "command": "workbench.action.saveWorkspaceAs"
    },
    {
        "key": "ctrl+alt+a",
        "command": "workbench.action.addRootFolder"
    },
    {
        "key": "ctrl+alt+t",
        "command": "workbench.action.terminal.new"
    },
    {
        "key": "ctrl+shift+oem_3",
        "command": "-workbench.action.terminal.new"
    },
    {
        "key": "ctrl+backspace",
        "command": "-workbench.action.terminal.deleteWordLeft",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+c",
        "command": "-workbench.action.terminal.copySelection",
        "when": "terminalFocus && terminalTextSelected"
    },
    {
        "key": "ctrl+shift+c",
        "command": "-workbench.action.terminal.openNativeConsole",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+shift+v",
        "command": "-workbench.action.terminal.paste",
        "when": "terminalFocus"
    },
    {
        "key": "alt+f3",
        "command": "-editor.action.dirtydiff.next",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+f3",
        "command": "editor.action.selectHighlights",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+alt+x",
        "command": "-workbench.view.extension.latex",
        "when": "!config.latex-workshop.bind.altKeymap.enabled"
    },
    {
        "key": "ctrl+alt+s",
        "command": "vscodeWorkspaceSwitcher.saveWorkspace"
    },
    {
        "key": "ctrl+k shift+w",
        "command": "-vscodeWorkspaceSwitcher.saveWorkspace"
    },
    {
        "key": "ctrl+alt+p",
        "command": "vscodeWorkspaceSwitcher.switchWorkspace"
    },
    {
        "key": "ctrl+k w",
        "command": "-vscodeWorkspaceSwitcher.switchWorkspace"
    },
    {
        "key": "ctrl+b",
        "command": "latex-workshop.build",
        "when": "!config.latex-workshop.bind.altKeymap.enabled && editorLangId == 'latex'"
    },
    {
        "key": "ctrl+alt+b",
        "command": "-latex-workshop.build",
        "when": "!config.latex-workshop.bind.altKeymap.enabled && editorLangId == 'latex'"
    },
    {
        "key": "ctrl+shift+b",
        "command": "latex-workshop.recipes",
        "when": "editorLangId == 'latex'"
    },
    {
        "key": "ctrl+b",
        "command": "python.execInTerminal",
        "when": "editorLangId == 'python'"
    },
    {
        "key": "ctrl+shift+b",
        "command": "python.datascience.runFileInteractive",
        "when": "editorLangId == 'python'"
    },
    {
        "key": "escape",
        "command": "latex-workshop.kill",
        "when": "editorLangId == 'latex'"
    },
    {
        "key": "ctrl+b",
        "command": "code-runner.run",
        "when": "editorLangId != 'python'"
        // "when": "editorLangId == 'c' || editorLangId == 'cpp' || editorLangId == 'f' || editorLangId == 'bat'"
    },
    {
        "key": "ctrl+alt+n",
        "command": "-code-runner.run"
    },
    {
        "key": "ctrl+alt+d",
        "command": "workbench.debug.action.toggleRepl"
    },
    {
        "key": "ctrl+shift+y",
        "command": "-workbench.debug.action.toggleRepl"
    },
    {
        "key": "ctrl+alt+d",
        "command": "workbench.action.terminal.focus",
        "when": "inDebugRepl"
    },
    {
        "key": "alt+r",
        "command": "toggleFindRegex",
        "when": "editorFocus"
    },
    {
        "key": "alt+r",
        "command": "-toggleFindRegex",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+alt+x",
        "command": "extension.toggle",
        "when": "editorFocus"
    },
    {
        "key": "alt+r",
        "command": "-extension.toggle",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+l",
        "command": "expandLineSelection",
        "when": "textInputFocus && editorLangId =~ /latex|rsweave/"
    },
    {
        "key": "ctrl+l ctrl+l",
        "command": "-expandLineSelection",
        "when": "textInputFocus && editorLangId =~ /latex|rsweave/"
    },
    {
        "key": "ctrl+shift+m",
        "command": "-workbench.actions.view.problems"
    },
    {
        "key": "ctrl+shift+m",
        "command": "extension.selectParenthesis",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+k shift+9",
        "command": "-extension.selectParenthesis",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+k shift+oem_4",
        "command": "-extension.selectCurlyBrackets",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+m",
        "command": "editor.action.smartSelect.expand"
    },
    {
        "key": "ctrl+r",
        "command": "workbench.action.gotoSymbol"
    },
    {
        "key": "ctrl+shift+o",
        "command": "-workbench.action.gotoSymbol"
    },
    {
        "key": "ctrl+shift+r",
        "command": "-editor.action.refactor",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+r",
        "command": "-workbench.action.quickOpenNavigatePreviousInRecentFilesPicker",
        "when": "inQuickOpen && inRecentFilesPicker"
    },
    {
        "key": "ctrl+k ctrl+b",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+w",
        "command": "workbench.action.terminal.kill",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+delete",
        "command": "deleteWordRight",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+delete",
        "command": "-deleteWordRight",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+backspace",
        "command": "deleteWordLeft",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+backspace",
        "command": "-deleteWordLeft",
        "when": "textInputFocus && !editorReadonly"
    },
]
